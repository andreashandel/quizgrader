gsub(".*?log_(.*?)[.]txt", "\\1", log_files)
strsplit(gsub(".*?log_(.*?)[.]txt", "\\1", log_files), split = "_")
lapply(strsplit(gsub(".*?log_(.*?)[.]txt", "\\1", log_files), split = "_"), purrr::pluck, c(1,2,4))
?purrr::pluck()
?strsplit
strsplit(gsub(".*?log_(.*?)[.]txt", "\\1", log_files), split = "_")
keys <- strsplit(gsub(".*?log_(.*?)[.]txt", "\\1", log_files), split = "_")
keys
sapply(keys, c)
setNames(t(sapply(keys, c))[, -3], nm = c("StudentID", "QuizID", "Attempt"))
sapply(keys, c)
t(sapply(keys, c))
t(sapply(keys, c))[-3]
matrix(t(sapply(keys, c)))[-3]
as.matrix(t(sapply(keys, c)))[-3]
as.data.frame(t(sapply(keys, c)))
data.frame(t(sapply(keys, c)))
?data.frame
setNames(t(sapply(keys, c)), c("StudentID", "QuizID", "a", "Attempt"))
data.frame(t(sapply(keys, c)))
data.frame(t(sapply(keys, c)))[-3]
setNames(data.frame(t(sapply(keys, c)))[-3], nm = c("StudentID", "QuizID", "Attempt"))
dplyr::bind_cols(setNames(data.frame(t(sapply(keys, c)))[-3], nm = c("StudentID", "QuizID", "Attempt")), file = log_files)
dplyr::bind_cols(setNames(data.frame(t(sapply(keys, c)))[-3], nm = c("StudentID", "QuizID", "Attempt")), file = log_files)%>%group_by(QuizID)%>%filter(which.max(Attempt))
dplyr::bind_cols(setNames(data.frame(t(sapply(keys, c)))[-3], nm = c("StudentID", "QuizID", "Attempt")), file = log_files)%>%dplyr::group_by(QuizID)%>%dplyr::filter(which.max(Attempt))
dplyr::bind_cols(setNames(data.frame(t(sapply(keys, c)))[-3], nm = c("StudentID", "QuizID", "Attempt")), file = log_files)%>%dplyr::group_by(QuizID)%>%dplyr::filter(Attempt ==which.max(Attempt))
dplyr::bind_cols(setNames(data.frame(t(sapply(keys, c)))[-3], nm = c("StudentID", "QuizID", "Attempt")), file = log_files)%>%dplyr::group_by(QuizID)%>%dplyr::filter(Attempt == which.max(Attempt))
dplyr::bind_cols(setNames(data.frame(t(sapply(keys, c)))[-3], nm = c("StudentID", "QuizID", "Attempt")), file = log_files)%>%dplyr::group_by(QuizID)%>%dplyr::filter(Attempt == which.max(Attempt)) %>% dplyr::ungroup()
dplyr::bind_cols(setNames(data.frame(t(sapply(keys, c)))[-3], nm = c("StudentID", "QuizID", "Attempt")), file = log_files)%>%dplyr::group_by(QuizID)%>%dplyr::filter(Attempt == which.max(Attempt)) %>% dplyr::ungroup()
test <- dplyr::bind_cols(setNames(data.frame(t(sapply(keys, c)))[-3], nm = c("StudentID", "QuizID", "Attempt")), file = log_files)%>%dplyr::group_by(QuizID)%>%dplyr::filter(Attempt == which.max(Attempt)) %>% dplyr::ungroup()
test['file']
log_df <- lapply(filename_keys_df["file"], read.delim)
log_df <- lapply(test["file"], read.delim)
getwd()
dir()
read.delim(test$file[1])
log_df <- sapply(test["file"], read.delim)
read.delim(test["file"][1])
test["file"][1]
test %>% data.frame()
test %>% data.frame() %>% class()
test %<>% data.frame()
log_df <- sapply(test["file"], read.delim)
read.delim(test["file"])
read.delim(test["file"][1])
dir()
test["file"]
test["file"][1]
read.delim(test["file"][1])
class(test$file)
class(test["file"][1])
class(test$file[1])
lapply(test["file"], class)
lapply(test$file, class)
lapply(test$file, read.delim)
lapply(test$file, read.delim) %>% dplyr::bind_rows()
lapply(test$file, read.delim)[[1]]
lapply(test$file, read.delim)[[1]] %>% tidyr::pivot_longer(cols = 5:ncol(.), names_to = "QuestionID", values_to = "Answer")
lapply(test$file, read.delim)[[1]] %>% dplyr::select(-Score) %>% tidyr::pivot_longer(cols = 5:ncol(.), names_to = "QuestionID", values_to = "Score")
lapply(test$file, read.delim)[[1]]
grepl(".*?q[0-9].*?", names(lapply(test$file, read.delim)[[1]]))
which(grepl(".*?q[0-9].*?", names(lapply(test$file, read.delim)[[1]])))
lapply(test$file, read.delim)[[1]] %>% dplyr::select(-Score) %>% tidyr::pivot_longer(cols = which(grepl(".*?q[0-9].*?", names(lapply(test$file, read.delim)[[1]]))), names_to = "QuestionID", values_to = "Score")
lapply(test$file, read.delim)[[1]] %>% dplyr::select(-Score) %>% tidyr::pivot_longer(cols = which(grepl(".*?q[0-9].*?", names(lapply(.)))), names_to = "QuestionID", values_to = "Score")
lapply(test$file, read.delim)[[1]] %>% dplyr::select(-Score) %>% tidyr::pivot_longer(cols = which(grepl(".*?q[0-9].*?", names(lapply(test$file, read.delim)[[1]])))-1, names_to = "QuestionID", values_to = "Score")
lapply(test$file, read.delim)[[1]] %>% dplyr::select(-Score) %>% tidyr::pivot_longer(cols = which(grepl(".*?q[0-9].*?", names(.))), names_to = "QuestionID", values_to = "Score")
lapply(test$file, function(.file){
.df <- read.delim(file = .file) %>%
dplyr::select(-Score) %>%
tidyr::pivot_longer(cols = which(grepl(".*?q[0-9].*?", names(.))),
names_to = "QuestionID",
values_to = "Score"
)
}) %>%
dplyr::bind_rows()
lapply(test$file, function(.file){
.df <- read.delim(file = .file) %>%
dplyr::select(StudentID, QuizID, Score) %>%
}) %>%
dplyr::bind_rows()
lapply(test$file, function(.file){
.df <- read.delim(file = .file) %>%
dplyr::select(StudentID, QuizID, Score)
}) %>%
dplyr::bind_rows()
library(quizgrader)
quizmanager()
setwd("C:/Users/daile/Desktop/test_server")
runApp()
library(quizgrader)
setwd("~/GitHub Projects/quizgrader")
quizmanager()
setwd("C:/Users/daile/Desktop/test_server")
runApp()
dir()
completequizzes_folder = "./completequizzes"
#names of all complete quizzes
completequiz_files = list.files(path = completequizzes_folder,
pattern = "\\.xlsx$",
recursive=FALSE,
full.names = FALSE)
completequiz_files
completequiz_df <- lapply(completequiz_files,
function(.file)
{
.quiz <- readxl::read_xlsx(.file, col_types = "text")
}
)
#names of all complete quizzes
completequiz_files = list.files(path = completequizzes_folder,
pattern = "\\.xlsx$",
recursive=FALSE,
full.names = TRUE)
completequiz_df <- lapply(completequiz_files,
function(.file)
{
.quiz <- readxl::read_xlsx(.file, col_types = "text")
}
)
completequiz_df
# read each one and extract quizid, number of questions, due date, number of attempts
# then, put all summaries into a dataframe
summary_df <- lapply(completequiz_files,
function(.file)
{
.quiz <- readxl::read_xlsx(.file, col_types = "text")
.quiz_summary <- data.frame(QuizID = .quiz$QuizID[1],
n_Questions = nrow(.quiz),
DueDate = .quiz$DueDate[1],
Attempts = .quiz$Attempts[1]
)
return(.quiz_summary)
}
) %>%
bind_rows() %>%
data.frame()
summary_df
runApp('~/GitHub Projects/quizgrader/auxiliary/playground.R')
runApp('~/GitHub Projects/quizgrader/auxiliary/playground.R')
runApp('~/GitHub Projects/quizgrader/auxiliary/playground.R')
library(quizgrader)
library(quizgrader)
?shiny::tabPanel()
?shiny::fluidRow
2+(-1)
2+-1
2++1
library(shiny); runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
?shiny::p()
?p()
runApp('inst/apps/quizmanager.R')
?shiny::tabPanel
runApp('inst/apps/quizmanager.R')
runApp('auxiliary/playground.R')
runApp('auxiliary/playground.R')
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
shinyjs::reset()
?shinyjs::reset()
dir()
dir("../../../Desktop")
dir("../../../Desktop/empty")
list.files("../../../Desktop/empty")
test <- list.files("../../../Desktop/empty")
lapply(test, print)
is.null(lapply(test, print))
length(lapply(test, print))
dplyr::bind_rows(lapply(test, print))
data.frame(dplyr::bind_rows(lapply(test, print)))
length(data.frame(dplyr::bind_rows(lapply(test, print))))
nrow(data.frame(dplyr::bind_rows(lapply(test, print))))
paste("Currently, there are no quizzes associated with this course.")
is.character(paste("Currently, there are no quizzes associated with this course."))
is.character(data.frame(dplyr::bind_rows(lapply(test, print))))
runApp('inst/apps/quizmanager.R')
library(quizgrader)
quizmanager()
library(quizgrader)
quizmanager()
library(quizgrader)
quizmanager()
library(quizgrader)
quizmanager()
library(quizgrader)
quizmanager()
library(quizgrader)
quizmanager()
library(quizgrader)
quizmanager()
grepl("course_summary.*?[.]xlsx$", "course_summary.xlsx")
grepl("course_summary.*?[.]xlsx$", "quiz1_complete.xlsx")
?|>
"test"|>print()
quizmanager()
setwd("C:/Users/daile/Desktop/test_server")
runApp()
setwd("~/GitHub Projects/quizgrader")
setwd("C:/Users/daile/Desktop/test_server")
setwd("~/GitHub Projects/quizgrader")
library(quizgrader)
quizmanager()
library(quizgrader)
quizmanager()
setwd("C:/Users/daile/Desktop/test_server")
runApp()
setwd("~/GitHub Projects/quizgrader")
quizmanager()
setwd("~/GitHub Projects/quizgrader/inst/apps")
setwd("~/GitHub Projects/quizgrader")
Sys.time()
Sys.Date()
as.character(Sys.Date())
data.frame(StudentID = NA,
QuizID = NA,
Attempt = NA,
Score = NA,
n_Questions = NA,
n_Correct = NA,
Submit_Date = NA
)
submissions_log <- data.frame(StudentID = NA,
QuizID = NA,
Attempt = NA,
Score = NA,
n_Questions = NA,
n_Correct = NA,
Submit_Date = NA
)
library(quizgrader)
library(quizgrader)
quizmanager()
library(quizgrader)
quizmanager()
library(quizgrader)
quizmanager()
setwd("C:/Users/daile/Desktop/test_server")
runApp()
library(quizgrader)
runApp()
?dplyr::mutate_all
runApp('~/GitHub Projects/quizgrader/inst/apps')
library(quizgrader)
quizmanager()
setwd("C:/Users/daile/Desktop/test_server")
runApp()
rlang::last_error()
dir()
quizgrader::read_submissions_log("./studentsubmissions")
runApp()
quizgrader::read_submissions_log("./studentsubmissions")
dir()
dir('./studentsubmissions')
length(dir('./studentsubmissions'))
library(quizgrader)
quizmanager()
setwd("C:/Users/daile/Desktop/test_server")
runApp()
?dplyr::n()
runApp()
runApp()
runApp()
quizmanager()
library(quizgrader)
setwd("C:/Users/daile/Desktop/test_server")
setwd("~/GitHub Projects/quizgrader")
quizmanager()
setwd("C:/Users/daile/Desktop/test_server")
runApp()
library(quizgrader)
library(quizgrader)
quizmanager()
library(quizgrader)
quizmanager()
setwd("~/GitHub Projects/quizgrader/inst/apps")
setwd("~/GitHub Projects/quizgrader")
quizmanager()
library(quizgrader)
quizmanager()
library(quizgrader)
quizmanager()
setwd("C:/Users/daile/Desktop/quizgrader_testing_grounds/test_server")
runApp()
setwd("~/GitHub Projects/quizgrader")
test <- 1:3
seq_along(test)
test <- letters[1:5]
seq_along(test)
?rsatscan::satscan()
test <- c()
test
is.null(test)
test <- 1:3
paste("testing", test)
paste("testing", test, collapse = T)
paste("testing", test, collapse = "")
paste("testing", test, sep = "")
cat("testing", test)
runApp('inst/apps/quizmanager.R')
paste("testing", test)
paste("testing", test, sep = "")
?paste("testing", test, sep = "")
?paste("testing", paste(test, collapse = ","), sep = "\n")
paste("testing", paste(test, collapse = ","), sep = "\n")
?modalDialog
runApp('inst/apps/quizmanager.R')
HTML(paste("testing", test))
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
paste("testing", test)
paste("testing", paste(test, collapse = ", "))
paste("testing", "<ul>", "<li>" paste(test, collapse = "</li>"), "</li>", "/ul")
paste("testing", "<ul>", "<li>", paste(test, collapse = "</li>"), "</li>", "/ul")
paste0("testing<br>", "<ul>", "<li>", paste(test, collapse = "</li>"), "</li>", "/ul")
paste0("testing<br>", "<ul>", "<li>", paste(test, collapse = "</li>"), "</li>", "</ul>")
HTML(paste0("testing<br>", "<ul>", "<li>", paste(test, collapse = "</li>"), "</li>", "</ul>"))
HTML(paste0("testing<br>", "<ul>", "<li>", paste(test, collapse = "</li><li>"), "</li>", "</ul>"))
test <- 1
HTML(paste0("testing<br>", "<ul>", "<li>", paste(test, collapse = "</li><li>"), "</li>", "</ul>"))
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
?p
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
ui <- shinyUI(bootstrapPage(
shinyFilesButton('files', 'File select', 'Please select a file', FALSE)
))
server <- shinyServer(function(input, output) {
shinyFileChoose(input, 'files', roots=c(wd='.'), filetypes=c('', 'txt'),
defaultPath='', defaultRoot='wd')
})
runApp(list(
ui=ui,
server=server
))
library(shinyFiles)
ui <- shinyUI(bootstrapPage(
shinyFilesButton('files', 'File select', 'Please select a file', FALSE)
))
server <- shinyServer(function(input, output) {
shinyFileChoose(input, 'files', roots=c(wd='.'), filetypes=c('', 'txt'),
defaultPath='', defaultRoot='wd')
})
runApp(list(
ui=ui,
server=server
))
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
runApp('quizmanager.R')
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
fs::path(courselocation,"completequizzes")
as.character(fs::path(courselocation,"completequizzes"))
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
rlang::last_error()
rlang::last_trace()
rlang::warning_cnd()
ui <- shinyUI(bootstrapPage(
shinyFilesButton('files', 'File select', 'Please select a file', FALSE)
))
server <- shinyServer(function(input, output) {
shinyFileChoose(input, 'files', roots=c(wd='.'), filetypes=c('', 'txt'),
defaultPath='', defaultRoot='wd')
})
runApp(list(
ui=ui,
server=server
))
ui <- shinyUI(bootstrapPage(
shinyFilesButton('files', 'File select', 'Please select a file', FALSE)
))
server <- shinyServer(function(input, output) {
shinyFileChoose(input, 'files', roots=c(wd=courselocation), filetypes=c('', 'txt'),
defaultPath='', defaultRoot='wd')
})
runApp(list(
ui=ui,
server=server
))
ui <- shinyUI(bootstrapPage(
shinyFilesButton('files', 'File select', 'Please select a file', FALSE)
))
server <- shinyServer(function(input, output) {
shinyFileChoose(input, 'files', roots=c(wd=fs_path(courselocation, "completequizzes")), filetypes=c('', 'txt'),
defaultPath='', defaultRoot='wd')
})
runApp(list(
ui=ui,
server=server
))
ui <- shinyUI(bootstrapPage(
shinyFilesButton('files', 'File select', 'Please select a file', FALSE)
))
server <- shinyServer(function(input, output) {
shinyFileChoose(input, 'files', roots=c(wd=fs::fs_path(courselocation, "completequizzes")), filetypes=c('', 'txt'),
defaultPath='', defaultRoot='wd')
})
runApp(list(
ui=ui,
server=server
))
ui <- shinyUI(bootstrapPage(
shinyFilesButton('files', 'File select', 'Please select a file', FALSE)
))
server <- shinyServer(function(input, output) {
shinyFileChoose(input, 'files', roots=c(wd=fs::path(courselocation, "completequizzes")), filetypes=c('', 'txt'),
defaultPath='', defaultRoot='wd')
})
runApp(list(
ui=ui,
server=server
))
ui <- shinyUI(bootstrapPage(
shinyFilesButton('files', 'File select', 'Please select a file', FALSE)
))
server <- shinyServer(function(input, output) {
shinyFileChoose(input, 'files', roots=c(wd=fs::path(courselocation, "completequizzes")), filetypes=c('', 'xlsx'),
defaultPath='', defaultRoot='wd')
})
runApp(list(
ui=ui,
server=server
))
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
file.choose()
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
runApp('inst/apps')
ui <- shinyUI(bootstrapPage(
shinyFilesButton('files', 'File select', 'Please select a file', FALSE)
))
server <- shinyServer(function(input, output) {
shinyFileChoose(input, 'files', roots=c(wd=fs::path(courselocation, "completequizzes")), filetypes=c('', 'xlsx'),
defaultPath='', defaultRoot='wd')
})
runApp(list(
ui=ui,
server=server
))
library(shiny)
library(shinyFiles)
ui <- shinyUI(bootstrapPage(
shinyFilesButton('files', 'File select', 'Please select a file', FALSE)
))
server <- shinyServer(function(input, output) {
shinyFileChoose(input, 'files', roots=c(wd=fs::path(courselocation, "completequizzes")), filetypes=c('', 'xlsx'),
defaultPath='', defaultRoot='wd')
})
runApp(list(
ui=ui,
server=server
))
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
View(deletefile)
runApp('inst/apps/quizmanager.R')
?shinyFileChoose
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
View(deletefile)
deletefile
shinyFiles::parseFilePaths(deletefile)
shinyFiles::parseFilePaths(volumes, deletefile)
volumes = c(Coursefolder = fs::path(courselocation,"completequizzes"))
shinyFiles::parseFilePaths(volumes, deletefile)
shinyFiles::parseFilePaths(volumes, deletefile)$datapath
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
library(shiny)
library(shinyFiles)
ui <- shinyUI(bootstrapPage(
shinyFilesButton('files', 'File select', 'Please select a file', FALSE)
))
server <- shinyServer(function(input, output) {
shinyFileChoose(input, 'files', roots=c(wd=fs::path(courselocation, "completequizzes")), filetypes=c('', 'xlsx'),
defaultPath='', defaultRoot='wd')
})
runApp(list(
ui=ui,
server=server
))
fs::path(courselocation, "completequizzes")
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
library(quizgrader)
runApp('inst/apps/quizmanager.R')
?fs::file_delete()
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
runApp('inst/apps/quizmanager.R')
library(quizgrader)
quizmanager()
ls()
rm(list = ls())
library(quizgrader)
quizmanager()
quizmanager()
